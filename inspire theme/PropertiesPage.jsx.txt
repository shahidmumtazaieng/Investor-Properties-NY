import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import { MagnifyingGlassIcon, FunnelIcon, MapPinIcon } from 'lucide-react';
import PropertyCard from '../components/property/PropertyCard';
import Button from '../components/ui/Button';
import Card from '../components/ui/Card';

const PropertiesPage = () => {
  const [properties, setProperties] = useState([]);
  const [filteredProperties, setFilteredProperties] = useState([]);
  const [loading, setLoading] = useState(true);
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedBorough, setSelectedBorough] = useState('all');
  const [selectedType, setSelectedType] = useState('all');
  const [priceRange, setPriceRange] = useState('all');

  useEffect(() => {
    // Simulate fetching properties
    setTimeout(() => {
      const mockProperties = [
        {
          id: '1',
          address: '123 Park Avenue, Manhattan',
          neighborhood: 'Upper East Side',
          borough: 'Manhattan',
          propertyType: 'Condo',
          beds: 3,
          baths: '2.5',
          sqft: 1800,
          price: '$1,200,000',
          arv: '$1,800,000',
          estimatedProfit: '$400,000',
          images: ['https://images.unsplash.com/photo-1510655083999-4b632cd36e87?crop=entropy&cs=srgb&fm=jpg&ixid=M3w3NTAwNDR8MHwxfHNlYXJjaHw1fHxOWUMlMjBza3lsaW5lJTIwZ2xhc3MlMjB0b3dlcnMlMjBsdXh1cnklMjBidWlsZGluZ3MlMjBnb2xkZW4lMjBob3VyfGVufDB8MHx8b3JhbmdlfDE3NTg2MTU5Mzh8MA&ixlib=rb-4.1.0&q=85'],
          description: 'Luxury condo with stunning city views'
        },
        {
          id: '2',
          address: '456 Brooklyn Ave, Brooklyn',
          neighborhood: 'Park Slope',
          borough: 'Brooklyn',
          propertyType: 'Townhouse',
          beds: 4,
          baths: '3',
          sqft: 2200,
          price: '$850,000',
          arv: '$1,300,000',
          estimatedProfit: '$350,000',
          images: ['https://images.unsplash.com/photo-1449824913935-59a10b8d2000?crop=entropy&cs=srgb&fm=jpg&ixid=M3w3NTAwNDR8MHwxfHNlYXJjaHwxfHxOWUMlMjBicm93bnN0b25lJTIwYnVpbGRpbmd8ZW58MHx8fHx8MTc1ODYxNTk5MHww&ixlib=rb-4.1.0&q=85'],
          description: 'Charming brownstone in prime location'
        },
        {
          id: '3',
          address: '789 Queens Blvd, Queens',
          neighborhood: 'Long Island City',
          borough: 'Queens',
          propertyType: 'Multi-family',
          beds: 6,
          baths: '4',
          sqft: 3000,
          price: '$1,500,000',
          arv: '$2,200,000',
          estimatedProfit: '$500,000',
          images: ['https://images.unsplash.com/photo-1512917774080-9991f1c4c750?crop=entropy&cs=srgb&fm=jpg&ixid=M3w3NTAwNDR8MHwxfHNlYXJjaHwyfHxOWUMlMjBtdWx0aSUyMGZhbWlseSUyMGJ1aWxkaW5nfGVufDB8MHx8fHx8MTc1ODYxNjAyOXww&ixlib=rb-4.1.0&q=85'],
          description: 'Investment opportunity with rental income'
        },
        {
          id: '4',
          address: '321 Bronx St, Bronx',
          neighborhood: 'Fordham',
          borough: 'Bronx',
          propertyType: 'Single Family',
          beds: 3,
          baths: '2',
          sqft: 1500,
          price: '$450,000',
          arv: '$650,000',
          estimatedProfit: '$150,000',
          images: ['https://images.unsplash.com/photo-1570129477492-45c003edd2be?crop=entropy&cs=srgb&fm=jpg&ixid=M3w3NTAwNDR8MHwxfHNlYXJjaHwxfHxOWUMlMjBzaW5nbGUlMjBmYW1pbHl8ZW58MHx8fHx8MTc1ODYxNjA2MHww&ixlib=rb-4.1.0&q=85'],
          description: 'Great starter home with renovation potential'
        },
        {
          id: '5',
          address: '654 Staten Island Dr, Staten Island',
          neighborhood: 'St. George',
          borough: 'Staten Island',
          propertyType: 'Condo',
          beds: 2,
          baths: '2',
          sqft: 1200,
          price: '$350,000',
          arv: '$500,000',
          estimatedProfit: '$100,000',
          images: ['https://images.unsplash.com/photo-1545324418-cc1a3fa10c00?crop=entropy&cs=srgb&fm=jpg&ixid=M3w3NTAwNDR8MHwxfHNlYXJjaHwxfHxOWUMlMjBjb25kb3xlbnwwfHx8fHwxNzU4NjE2MDk0fDA&ixlib=rb-4.1.0&q=85'],
          description: 'Modern condo with harbor views'
        },
        {
          id: '6',
          address: '987 Manhattan Ave, Manhattan',
          neighborhood: 'Hell\'s Kitchen',
          borough: 'Manhattan',
          propertyType: 'Co-op',
          beds: 2,
          baths: '1.5',
          sqft: 1000,
          price: '$750,000',
          arv: '$1,100,000',
          estimatedProfit: '$250,000',
          images: ['https://images.unsplash.com/photo-1507089947368-19c1da9775ae?crop=entropy&cs=srgb&fm=jpg&ixid=M3w3NTAwNDR8MHwxfHNlYXJjaHwxfHxOWUMlMjBjb3B8ZW58MHx8fHx8MTc1ODYxNjEyOXww&ixlib=rb-4.1.0&q=85'],
          description: 'Prime location co-op with renovation potential'
        }
      ];
      
      setProperties(mockProperties);
      setFilteredProperties(mockProperties);
      setLoading(false);
    }, 1000);
  }, []);

  useEffect(() => {
    let filtered = properties;

    // Search filter
    if (searchTerm) {
      filtered = filtered.filter(property => 
        property.address.toLowerCase().includes(searchTerm.toLowerCase()) ||
        property.neighborhood.toLowerCase().includes(searchTerm.toLowerCase()) ||
        property.borough.toLowerCase().includes(searchTerm.toLowerCase())
      );
    }

    // Borough filter
    if (selectedBorough !== 'all') {
      filtered = filtered.filter(property => property.borough === selectedBorough);
    }

    // Property type filter
    if (selectedType !== 'all') {
      filtered = filtered.filter(property => property.propertyType === selectedType);
    }

    // Price range filter
    if (priceRange !== 'all') {
      filtered = filtered.filter(property => {
        const price = parseInt(property.price.replace(/[$,]/g, ''));
        switch (priceRange) {
          case 'under-500k':
            return price < 500000;
          case '500k-1m':
            return price >= 500000 && price < 1000000;
          case '1m-2m':
            return price >= 1000000 && price < 2000000;
          case 'over-2m':
            return price >= 2000000;
          default:
            return true;
        }
      });
    }

    setFilteredProperties(filtered);
  }, [searchTerm, selectedBorough, selectedType, priceRange, properties]);

  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-neutral-50 to-white">
        <div className="text-center">
          <div className="w-16 h-16 border-4 border-accent-yellow border-t-transparent rounded-full animate-spin mx-auto mb-4"></div>
          <p className="text-neutral-600">Loading properties...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-neutral-50 via-white to-neutral-100">
      {/* Header Section */}
      <section className="bg-gradient-hero text-white py-20">
        <div className="container mx-auto px-4">
          <div className="text-center max-w-4xl mx-auto">
            <h1 className="text-5xl md:text-6xl font-bold mb-6">
              Exclusive Properties
            </h1>
            <p className="text-xl md:text-2xl mb-8 text-neutral-100 leading-relaxed">
              Discover off-market real estate opportunities with verified profit potential across NYC's five boroughs
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <div className="relative flex-1 max-w-md mx-auto">
                <MagnifyingGlassIcon className="absolute left-4 top-1/2 transform -translate-y-1/2 w-5 h-5 text-neutral-400" />
                <input
                  type="text"
                  placeholder="Search by address, neighborhood, or borough..."
                  value={searchTerm}
                  onChange={(e) => setSearchTerm(e.target.value)}
                  className="w-full pl-12 pr-4 py-3 rounded-xl bg-white/20 backdrop-blur-sm border border-white/30 text-white placeholder-white/70 focus:outline-none focus:ring-2 focus:ring-accent-yellow"
                />
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Filters Section */}
      <section className="py-8 bg-white border-b border-neutral-200">
        <div className="container mx-auto px-4">
          <div className="flex flex-wrap gap-4 items-center justify-between">
            <div className="flex flex-wrap gap-4">
              {/* Borough Filter */}
              <select
                value={selectedBorough}
                onChange={(e) => setSelectedBorough(e.target.value)}
                className="px-4 py-2 border border-neutral-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-accent-yellow"
              >
                <option value="all">All Boroughs</option>
                <option value="Manhattan">Manhattan</option>
                <option value="Brooklyn">Brooklyn</option>
                <option value="Queens">Queens</option>
                <option value="Bronx">Bronx</option>
                <option value="Staten Island">Staten Island</option>
              </select>

              {/* Property Type Filter */}
              <select
                value={selectedType}
                onChange={(e) => setSelectedType(e.target.value)}
                className="px-4 py-2 border border-neutral-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-accent-yellow"
              >
                <option value="all">All Types</option>
                <option value="Condo">Condo</option>
                <option value="Townhouse">Townhouse</option>
                <option value="Multi-family">Multi-family</option>
                <option value="Single Family">Single Family</option>
                <option value="Co-op">Co-op</option>
              </select>

              {/* Price Range Filter */}
              <select
                value={priceRange}
                onChange={(e) => setPriceRange(e.target.value)}
                className="px-4 py-2 border border-neutral-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-accent-yellow"
              >
                <option value="all">All Prices</option>
                <option value="under-500k">Under $500K</option>
                <option value="500k-1m">$500K - $1M</option>
                <option value="1m-2m">$1M - $2M</option>
                <option value="over-2m">Over $2M</option>
              </select>
            </div>

            <div className="text-neutral-600">
              {filteredProperties.length} properties found
            </div>
          </div>
        </div>
      </section>

      {/* Properties Grid */}
      <section className="py-16">
        <div className="container mx-auto px-4">
          {filteredProperties.length > 0 ? (
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
              {filteredProperties.map((property, index) => (
                <PropertyCard 
                  key={property.id} 
                  property={property}
                  animationDelay={index * 0.1}
                />
              ))}
            </div>
          ) : (
            <div className="text-center py-16">
              <MapPinIcon className="w-16 h-16 text-neutral-400 mx-auto mb-4" />
              <h3 className="text-2xl font-bold text-neutral-600 mb-2">No properties found</h3>
              <p className="text-neutral-500 mb-6">
                Try adjusting your search criteria or filters to find more properties.
              </p>
              <Button 
                variant="secondary" 
                onClick={() => {
                  setSearchTerm('');
                  setSelectedBorough('all');
                  setSelectedType('all');
                  setPriceRange('all');
                }}
              >
                Clear All Filters
              </Button>
            </div>
          )}
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-16 bg-gradient-hero text-white">
        <div className="container mx-auto px-4 text-center">
          <h2 className="text-4xl font-bold mb-6">
            Don't See What You're Looking For?
          </h2>
          <p className="text-xl mb-8 max-w-3xl mx-auto text-neutral-100 leading-relaxed">
            Get notified about new properties that match your investment criteria before they hit the market.
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <Link to="/auth/investor">
              <Button variant="secondary" className="text-lg px-8 py-4">
                Create Alert
              </Button>
            </Link>
            <Link to="/contact">
              <Button variant="outline" className="text-lg px-8 py-4">
                Contact Agent
              </Button>
            </Link>
          </div>
        </div>
      </section>
    </div>
  );
};

export default PropertiesPage;